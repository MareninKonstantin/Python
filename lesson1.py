#Задание 1_1
#Импортируйте библиотеку Numpy и дайте ей псевдоним np. Создайте массив Numpy под названием a размером 5x2,
# то есть состоящий из 5 строк и 2 столбцов. Первый столбец должен содержать числа 1, 2, 3, 3, 1, а второй - числа 6, 8, 11, 10, 7.
# Будем считать, что каждый столбец - это признак, а строка - наблюдение. Затем найдите среднее значение по каждому признаку,
# используя метод mean массива Numpy. Результат запишите в массив mean_a, в нем должно быть 2 элемента

import numpy as np

a = np.array([[1, 2, 3, 3, 1],
             [6, 8, 11, 10, 7]])

mean_a = a.transpose().mean(axis=0)

print(f'Средние  значения по каждому признаку:  {mean_a})')

#----------------------------------------------------------------------------------------------------------------------------------------
#Задание 1_2
#Вычислите массив a_centered, отняв от значений массива “а” средние значения соответствующих признаков, содержащиеся в массиве mean_a.
# Вычисление должно производиться в одно действие. Получившийся массив должен иметь размер 5x2

mean_b = [[mean_a[i]] * 5 for i in range(2)]
a = a.transpose()
a_centered = a - mean_b
print(f'Массив a_centered = {a_centered.transpose()}')

#----------------------------------------------------------------------------------------------------------------------------------------
#Задание 1_3
#Найдите скалярное произведение столбцов массива a_centered. В результате должна получиться величина a_centered_sp
# Затем поделите a_centered_sp на N-1, где N - число наблюдений

a_centered_sp = (a_centered[0] @ a_centered[1]) / (a_centered.shape[1] - 1)
print(f'{a_centered_sp}')

#----------------------------------------------------------------------------------------------------------------------------------------
#Задание 2_1
#Импортируйте библиотеку Pandas и дайте ей псевдоним pd. Создайте датафрейм authors со столбцами author_id и author_name,
# в которых соответственно содержатся данные: [1, 2, 3] и ['Тургенев', 'Чехов', 'Островский'].
# Затем создайте датафрейм book cо столбцами author_id, book_title и price, в которых соответственно содержатся данные:  
# [1, 1, 1, 2, 2, 3, 3],
# ['Отцы и дети', 'Рудин', 'Дворянское гнездо', 'Толстый и тонкий', 'Дама с собачкой', 'Гроза', 'Таланты и поклонники'],
# [450, 300, 350, 500, 450, 370, 290]

import pandas as pd

authors = pd.DataFrame({
    "author_id": [1, 2, 3],
    "author_name": ["Тургенев", "Чехов", "Островский"]
})

book = pd.DataFrame({
    "author_id": [1, 1, 1, 2, 2, 3, 3],
    "book_title": ['Отцы и дети', 'Рудин', 'Дворянское гнездо', 'Толстый и тонкий', 'Дама с собачкой', 'Гроза', 'Таланты и поклонники'],
    "price": [450, 300, 350, 500, 450, 370, 290]
})

#----------------------------------------------------------------------------------------------------------------------------------------
#Задание 2_2
#Получите датафрейм authors_price, соединив датафреймы authors и books по полю author_id

authors_price = pd.merge(authors, book, on='author_id', how='inner')

#----------------------------------------------------------------------------------------------------------------------------------------
#Задание 2_3
#Создайте датафрейм top5, в котором содержатся строки из authors_price с пятью самыми дорогими книгами

top5 = authors_price.nlargest(5, "price")
top5

#----------------------------------------------------------------------------------------------------------------------------------------
#Задание 2_4
#Создайте датафрейм authors_stat на основе информации из authors_price. В датафрейме authors_stat должны быть четыре столбца:
# author_name, min_price, max_price и mean_price,
# в которых должны содержаться соответственно имя автора, минимальная, максимальная и средняя цена на книги этого автора

authors_stat = authors_price.groupby('author_name').agg({'price': 'min'})
authors_stat = authors_stat.rename(columns={'price': 'min_price'})
authors_stat2 = authors_price.groupby('author_name').agg({'price': 'max'})
authors_stat2 = authors_stat2.rename(columns={'price': 'max_price'})
authors_stat3 = authors_price.groupby('author_name').agg({'price': 'mean'})
authors_stat3 = authors_stat3.rename(columns={'price': 'mean_price'})
authors_stat = pd.concat([authors_stat, authors_stat2, authors_stat3], axis=1, ignore_index=False)
authors_stat = authors_stat.reset_index()
authors_stat
